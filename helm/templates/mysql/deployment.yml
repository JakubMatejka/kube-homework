apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appPrefix }}-mysql
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appPrefix }}-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appPrefix }}-mysql
  template:
    metadata:
      labels:
        app: {{ .Values.appPrefix }}-mysql
    spec:
      containers:
        - image: "{{ .Values.mysql.image.name }}:{{ .Values.mysql.image.tag }}"
          name: mysql
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.appPrefix }}-mysql-root-pass
                key: password
          - name: MYSQL_DATABASE
            value: wp_db
          - name: MYSQL_USER
            value: wp_user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.appPrefix }}-mysql-user-pass
                key: password
          ports:
          - containerPort: 3306
            name: mysql
          volumeMounts:
          - name: {{ .Values.appPrefix }}-mysql-storage
            mountPath: /var/lib/mysql
          resources:
            requests:
              cpu: 1000m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 1024Mi
          livenessProbe:
            exec:
              command: ["mysqladmin", "-uroot", "-p$MYSQL_ROOT_PASSWORD", "ping"]
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [ "mysqladmin", "-uroot", "-p$MYSQL_ROOT_PASSWORD", "ping" ]
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
      - name: {{ .Values.appPrefix }}-mysql-storage
        persistentVolumeClaim:
          claimName: {{ .Values.appPrefix }}-mysql-pvc
